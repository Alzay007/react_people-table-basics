{"version":3,"sources":["components/PageNavLink.tsx","components/MainNav.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","MainNav","role","HomePage","NotFoundPage","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","name","slug","sex","PeopleTable","people","personSlug","map","born","died","motherName","fatherName","mother","find","women","father","man","undefined","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useParams","useEffect","getPeopleData","data","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.e0b8782c.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n      to={to}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from './PageNavLink';\n\nexport const MainNav = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { name, slug, sex } = person;\n\n  return (\n    <Link\n      to={`../${slug}`}\n      className={classNames({ 'has-text-danger': sex === 'f' })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[];\n  personSlug: string;\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  personSlug,\n}) => {\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Sex</th>\n              <th>Born</th>\n              <th>Died</th>\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {people.map(person => {\n              const {\n                sex, born, died, motherName, fatherName, slug,\n              } = person;\n\n              const mother = people.find(women => {\n                return motherName === women.name;\n              });\n              const father = people.find(man => fatherName === man.name);\n\n              return (\n                <tr\n                  data-cy=\"person\"\n                  key={slug}\n                  className={classNames(\n                    { 'has-background-warning': personSlug === slug },\n                  )}\n                >\n                  <td>\n                    <PersonLink person={person} />\n                  </td>\n\n                  <td>{sex}</td>\n                  <td>{born}</td>\n                  <td>{died}</td>\n                  <td>\n                    {mother?.slug === undefined\n                      ? (\n                        motherName || '-'\n                      )\n                      : (\n                        <PersonLink person={mother} />\n                      )}\n\n                  </td>\n                  <td>\n                    {father?.slug === undefined\n                      ? (\n                        fatherName || '-'\n                      )\n                      : (\n                        <PersonLink person={father} />\n                      )}\n\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const { personSlug = '' } = useParams();\n\n  useEffect(() => {\n    const getPeopleData = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getPeople();\n\n        setPeople(data);\n      } catch (err) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    getPeopleData();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      {isError && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          Something went wrong\n        </p>\n      )}\n\n      {!isLoading && !people.length\n        && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n      {isLoading\n        ? <Loader />\n        : (\n          <PeopleTable\n            people={people}\n            personSlug={personSlug}\n          />\n        )}\n    </>\n  );\n};\n","import {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { MainNav } from './components/MainNav';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <MainNav />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}